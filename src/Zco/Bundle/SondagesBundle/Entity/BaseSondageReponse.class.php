<?php

/**
 * BaseSondageReponse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $question_id
 * @property integer $question_suivante_id
 * @property string $nom
 * @property integer $nb_votes
 * @property integer $ordre
 * @property enum $question_suivante
 * @property SondageQuestion $Question
 * @property SondageQuestion $QuestionSuivante
 * @property Doctrine_Collection $SondageVote
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseSondageReponse extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('zcov2_sondages_reponses');
        $this->hasColumn('question_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '11',
             ));
        $this->hasColumn('question_suivante_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '11',
             ));
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('nb_votes', 'integer', 11, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '11',
             ));
        $this->hasColumn('ordre', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('question_suivante', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'suivante',
              1 => 'fin',
              2 => 'id',
             ),
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SondageQuestion as Question', array(
             'local' => 'question_id',
             'foreign' => 'id'));

        $this->hasOne('SondageQuestion as QuestionSuivante', array(
             'local' => 'question_suivante_id',
             'foreign' => 'id'));

        $this->hasMany('SondageVote', array(
             'local' => 'id',
             'foreign' => 'reponse_id'));
    }
}