<?php

/**
 * BaseOnline
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $category_id
 * @property integer $ip
 * @property timestamp $first_action
 * @property timestamp $last_action
 * @property string $user_agent
 * @property string $action
 * @property integer $action_identifier
 * @property Utilisateur $User
 * @property Categorie $Category
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseOnline extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('zcov2_connectes');
        $this->hasColumn('connecte_id_utilisateur as user_id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '11',
             ));
        $this->hasColumn('connecte_id_categorie as category_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '11',
             ));
        $this->hasColumn('connecte_ip as ip', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('connecte_debut as first_action', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('connecte_derniere_action as last_action', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('connecte_user_agent as user_agent', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('connecte_nom_action as action', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('connecte_id1 as action_identifier', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur as User', array(
             'local' => 'user_id',
             'foreign' => 'utilisateur_id'));

        $this->hasOne('Categorie as Category', array(
             'local' => 'category_id',
             'foreign' => 'cat_id'));
    }
}