<?php

/**
 * BaseRecrutementCandidature
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $utilisateur_id
 * @property integer $recrutement_id
 * @property integer $admin_id
 * @property integer $correcteur_id
 * @property string $pseudo
 * @property timestamp $date
 * @property timestamp $date_debut_correction
 * @property timestamp $date_correction
 * @property timestamp $date_fin_correction
 * @property timestamp $date_reponse
 * @property string $texte
 * @property string $redaction
 * @property integer $quiz_score
 * @property timestamp $quiz_debut
 * @property timestamp $quiz_fin
 * @property string $etat
 * @property string $test_tuto
 * @property string $test_texte
 * @property string $correction_original
 * @property string $correction_corrige
 * @property float $correction_note
 * @property integer $ip
 * @property string $commentaire
 * @property integer $correcteur_note
 * @property Recrutement $Recrutement
 * @property Utilisateur $Utilisateur
 * @property Utilisateur $Admin
 * @property Utilisateur $Correcteur
 * @property Doctrine_Collection $Avis
 * @property Doctrine_Collection $LuNonLu
 * @property Doctrine_Collection $Commentaires
 * @property Doctrine_Collection $RecrutementCommentaire
 * @property Doctrine_Collection $RecrutementAvis
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRecrutementCandidature extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('zcov2_recrutements_candidatures');
        $this->hasColumn('candidature_id as id', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('candidature_id_utilisateur as utilisateur_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '11',
             ));
        $this->hasColumn('candidature_id_recrutement as recrutement_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '11',
             ));
        $this->hasColumn('candidature_id_admin as admin_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '11',
             ));
        $this->hasColumn('candidature_correcteur as correcteur_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '11',
             ));
        $this->hasColumn('candidature_pseudo as pseudo', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('candidature_date as date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('candidature_date_debut_correction as date_debut_correction', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('candidature_date_correction as date_correction', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('candidature_date_fin_correction as date_fin_correction', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('candidature_date_reponse as date_reponse', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('candidature_texte as texte', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('candidature_redaction as redaction', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('candidature_quiz_score as quiz_score', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('candidature_quiz_debut as quiz_debut', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('candidature_quiz_fin as quiz_fin', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('candidature_etat as etat', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('candidature_test_tuto as test_tuto', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('candidature_test_texte as test_texte', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('candidature_correction_original as correction_original', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('candidature_correction_note as correction_corrige', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('candidature_correction_note as correction_note', 'float', null, array(
             'type' => 'float',
             'length' => '',
             ));
        $this->hasColumn('candidature_ip as ip', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('candidature_commentaire as commentaire', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('candidature_correcteur_note as correcteur_note', 'integer', 6, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '6',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Recrutement', array(
             'local' => 'candidature_id_recrutement',
             'foreign' => 'recrutement_id'));

        $this->hasOne('Utilisateur', array(
             'local' => 'candidature_id_utilisateur',
             'foreign' => 'utilisateur_id'));

        $this->hasOne('Utilisateur as Admin', array(
             'local' => 'candidature_id_admin',
             'foreign' => 'utilisateur_id'));

        $this->hasOne('Utilisateur as Correcteur', array(
             'local' => 'candidature_correcteur',
             'foreign' => 'utilisateur_id'));

        $this->hasMany('RecrutementAvis as Avis', array(
             'local' => 'candidature_id',
             'foreign' => 'candidature_id'));

        $this->hasMany('RecrutementLuNonLu as LuNonLu', array(
             'local' => 'candidature_id',
             'foreign' => 'lunonlu_candidature_id'));

        $this->hasMany('RecrutementCommentaire as Commentaires', array(
             'local' => 'candidature_id',
             'foreign' => 'candidature_id'));

        $this->hasMany('RecrutementCommentaire', array(
             'local' => 'id',
             'foreign' => 'candidature_id'));

        $this->hasMany('RecrutementAvis', array(
             'local' => 'id',
             'foreign' => 'candidature_id'));
    }
}