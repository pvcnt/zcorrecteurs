<?php

/**
 * BaseRecrutement
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $quiz_id
 * @property integer $groupe_id
 * @property string $nom
 * @property timestamp $date
 * @property timestamp $date_fin_depot
 * @property integer $etat
 * @property string $texte
 * @property integer $nb_lus
 * @property boolean $redaction
 * @property boolean $test
 * @property string $lien
 * @property Quiz $Quiz
 * @property Groupe $Groupe
 * @property Doctrine_Collection $RecrutementCandidature
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRecrutement extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('zcov2_recrutements');
        $this->hasColumn('recrutement_id as id', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('recrutement_id_quiz as quiz_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('recrutement_id_groupe as groupe_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('recrutement_nom as nom', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('recrutement_date as date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('recrutement_date_fin_depot as date_fin_depot', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('recrutement_etat as etat', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('recrutement_texte as texte', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('recrutement_nb_lus as nb_lus', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('recrutement_redaction as redaction', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('recrutement_test as test', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('recrutement_lien as lien', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Quiz', array(
             'local' => 'recrutement_id_quiz',
             'foreign' => 'id'));

        $this->hasOne('Groupe', array(
             'local' => 'recrutement_id_groupe',
             'foreign' => 'id'));

        $this->hasMany('RecrutementCandidature', array(
             'local' => 'recrutement_id',
             'foreign' => 'candidature_id_recrutement'));
    }
}