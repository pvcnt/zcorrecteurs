<?php

/**
 * BaseTrackerTicket
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $first_version
 * @property integer $current_version
 * @property string $title
 * @property string $description
 * @property timestamp $date
 * @property boolean $private
 * @property boolean $critical
 * @property string $url
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTrackerTicket extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('zcov2_tracker_tickets');
        $this->hasColumn('ticket_id as id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('ticket_id_utilisateur as user_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('ticket_id_version_first as first_version', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('ticket_id_version_courante as current_version', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('ticket_titre as title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('ticket_description as description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('ticket_date as date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ticket_prive as private', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('ticket_critique as critical', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('ticket_url as url', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}